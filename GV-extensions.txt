Extensions to GV
----------------

Terms:

  M, N ::= ... | link M N | serve s(x)=M | request s

link is like <-> in CP
serve is like server input in CP
request is like server output in CP

Session types:

  S ::= ... | $S | #S

$ is like ! in CP
# is like ? in CP

Duality (~):

  ~($S) = #(~S)
  ~(#S) = $(~S)

The "un" predicate:

  un(#S) = true
  un(S)  = false,   if S is not of the form #S'

Typing rules:

  G |- M : S     D |- N : ~S
  --------------------------
  G,D |- link M N : end!

  G,x:S |- M : end!       un(G)
  -----------------------------
  G,s:$S |- serve s(x)=M : end!

  -----------------------
  s:#S |- request s : S

Translation from GV to CP:

  [[link M N]]z     = nu x.([[M]]x | nu y.([[N]]y | z().x <-> y))
  [[serve s(x)=M]]z = z().!s(x).nu y.(y[].0 | [[M]]y)
  [[request s]]z    = ?s[x].x <-> z
